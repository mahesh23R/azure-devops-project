trigger:
- master

# strategy:
#   matrix: 
#     linux:
#       operatingSystem: 'ubuntu-latest'
#     mac:
#       operatingSystem: 'macos-latest'

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  jobs:
  - job: BuildJob
    steps:
    - bash: echo "do the Build"
- stage: DevDeploy
  jobs:
  - deployment: DevDeployJob
    environment: Dev
    strategy:
      runOnce:
        deploy:
          steps:
            - script: echo deploy to dev
- stage: QADeploy
  jobs:
  - deployment: QADeployJob
    environment: QA
    strategy:
      runOnce:
        deploy:
          steps:
            - script: echo deploy to the QA            

# steps:
# - script: echo Running on $(operatingSystem)
#   displayName: 'Run a one-Line script'

# stages:
# - stage: build
#   jobs:
#   - job: FirstJob
#     steps:
#     - bash: echo build FirstJob
#     - bash: echo $(pipelinelevelvariables)
#     - bash: echo $(Build.BuildNumber)
#     - bash: echo $(Build.BuildId)
#     - bash: echo $(Build.SourceDirectory)
#     - bash: echo $(System.DefaultWorkingDirectory)
#     - bash: ls -R $(System.DefaultWorkingDirectory)
#     - bash: echo $(Build.ArctifactStagingDirectory)
#     - bash: java -version
#     - bash: node --version
#     - bash: python --version
#     - bash: mvn -version
#     - task: CopyFiles@2
#       inputs:
#         SourceFolder: '$(System.DefaultWorkingDirectory)'
#         Contents: |
#           **/*.yaml
#           **/*.tf
#         TargetFolder: '$(Build.ArctifactStagingDirectory)'
#     - bash: ls -R $(Build.ArctifactStagingDirectory) 
#     - task: PublishBuildArtifacts@1
#       inputs:
#         PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#         ArtifactName: 'drop'
#         publishLocation: 'Container'
  # - job: SecondJob
  #   steps:
  #   - bash: echo build SecondJob
  # - job: Thirdjob
  #   dependsOn: FirstJob
  #   steps:
  #   - bash: echo build ThirdJob 
  #   - bash: echo build $(pipelinelevelvariables)
# - stage: devdeploy
#   variables:
#     environment: dev
#   dependsOn: Build
#   jobs:
#   - job: devDeployjob
#     steps:
#     - bash: echo $(environment)Deployjob
# - stage: qadeploy
#   variables:
#     environment: qa
#   dependsOn: Build
#   jobs:
#   - job: qaDeployjob
#     steps:
#     - bash: echo $(environment)Deployjob
# - stage: proddeploy
#   variables:
#     environment: prod
#   dependsOn:
#   - devdeploy
#   - qadeploy
#   jobs:
#   - job: prodDeployjob
#     steps:
#     - bash: echo $(environment)Deployjob



